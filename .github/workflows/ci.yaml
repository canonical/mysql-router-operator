# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run linters
        run: tox run -e lint

  unit-test:
    name: Unit test charm
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4

  lib-check:
    name: Check libraries
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          # Workaround for https://github.com/canonical/charmcraft/issues/1389#issuecomment-1880921728
          touch requirements.txt
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.6.0
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}" # FIXME: current token will expire around 2023-09-23
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          use-labels: false
          fail-build: ${{ github.event_name == 'pull_request' }}

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v23.1.0
    with:
      # Use of cache blocked by https://github.com/canonical/charmcraft/issues/1456
      # Details: https://github.com/canonical/charmcraftcache/issues/3
      cache: false
      # Remove prefix when cache enabled
      # Needed to avoid conflict with artifact name on release CI
      artifact-prefix: ci-packed-charm-cache-false-.

  gh-hosted-collect-integration-tests:
    name: (GH hosted) Collect integration test groups
    needs:
      - lint
      - unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Collect test groups
        id: collect-groups
        run: tox run -e integration -- tests/integration -m '${{ steps.select-test-stability.outputs.mark_expression }}' --collect-groups
    outputs:
      groups: ${{ steps.collect-groups.outputs.groups }}

  gh-hosted-integration-test:
    strategy:
      fail-fast: false
      matrix:
        groups: ${{ fromJSON(needs.gh-hosted-collect-integration-tests.outputs.groups) }}
        ubuntu-versions:
          # Update whenever charmcraft.yaml is changed
          - series: focal
            bases-index: 0
          - series: jammy
            bases-index: 1
        juju-snap-channel:  ["2.9/stable", "3.4/stable", "3.6/candidate"]
        include:
          - juju-snap-channel: "3.6/candidate"
            agent-version: "3.6-rc2"
            libjuju-version: "3.5.2.0"
          - juju-snap-channel: "3.4/stable"
            agent-version: "3.4.3"
            libjuju-version:  "3.5.2.0"
          - juju-snap-channel: "2.9/stable"
            agent-version: "2.9.51"
            libjuju-version:  "2.9.49.0"
        exclude:
          - groups: {path_to_test_file: tests/integration/test_data_integrator.py}
            ubuntu-versions: {series: focal}
          - groups: {path_to_test_file: tests/integration/test_hacluster.py}
            ubuntu-versions: {series: focal}
    name: ${{ matrix.juju-snap-channel }} - (GH hosted) ${{ matrix.groups.job_name }} | ${{ matrix.ubuntu-versions.series }}
    needs:
      - lint
      - unit-test
      - build
      - gh-hosted-collect-integration-tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          bootstrap-options: "--agent-version ${{ matrix.agent-version }}"
          juju-channel: ${{ matrix.juju-snap-channel }}
      - name: Update python-libjuju version
        if: ${{ matrix.libjuju-version == '2.9.49.0' }}
        run: poetry add --lock --group integration juju@'${{ matrix.libjuju-version }}'
      - name: Download packed charm(s)
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.artifact-prefix }}-*
          merge-multiple: true
      - name: Select test stability level
        id: select-test-stability
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> "$GITHUB_OUTPUT"
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> "$GITHUB_OUTPUT"
          fi
      - name: Run integration tests
        if: ${{ !startsWith(matrix.juju-snap-channel, '3.6/') || github.event_name == 'schedule' }}
        run: tox run -e integration -- "${{ matrix.groups.path_to_test_file }}" --group="${{ matrix.groups.group_number }}" -m '${{ steps.select-test-stability.outputs.mark_expression }}' --mysql-router-charm-series=${{ matrix.ubuntu-versions.series }} --mysql-router-charm-bases-index=${{ matrix.ubuntu-versions.bases-index }}
        env:
          LIBJUJU_VERSION_SPECIFIER: ${{ matrix.libjuju-version }}
          SECRETS_FROM_GITHUB: |
            {
              "UBUNTU_PRO_TOKEN" : "${{ secrets.UBUNTU_PRO_TOKEN }}",
              "LANDSCAPE_ACCOUNT_NAME": "${{ secrets.LANDSCAPE_ACCOUNT_NAME }}",
              "LANDSCAPE_REGISTRATION_KEY": "${{ secrets.LANDSCAPE_REGISTRATION_KEY }}",
            }
